name: Build and deploy docs

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Setup SSH key for htmltools
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.HTMLTOOLS_SSH_KEY }}"

      - name: Check out and install htmltools
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          git clone git@github.com:rstudio/py-htmltools.git
          cd py-htmltools
          pip install -r requirements.txt
          pip install -e .

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Install shiny
        run: |
          pip install -e .

      - name: Setup SSH key for prism-experiments
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent2.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.PRISM_EXPERIMENTS_DEPLOY_KEY }}"

      - name: Check out prism-experiments
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent2.sock
        run: |
          cd ..
          git clone --depth=1 git@github.com:rstudio/prism-experiments.git

      # Configured for deployment to https://connect.rstudioservices.com/pyshiny
      - name: Build docs
        run: |
          export SHINYLIVE_DEST="/pyshiny/shinylive"
          cd docs
          make clean && make html

      # - name: Install rsconnect-python
      #   run: |
      #     pip install rsconnect-python
      #     rsconnect add --server https://colorado.rstudio.com/ --name colorado --api-key "${{ secrets.COLORADO_RSTUDIO_COM_WINSTON }}"

      # =====================================================
      # Deploy docs with R
      # =====================================================
      # rsconnect-python doesn't seem to support deploying static content at this point.
      # Hopefully it will in the future so we won't need to install R.
      - uses: r-lib/actions/setup-r@v2

      - name: Install system dependencies
        run: |
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Install rsconnect R package
        shell: Rscript {0}
        run: |
          install.packages("rsconnect")

      - name: Connect user account
        shell: Rscript {0}
        env:
          CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
        run: |
          rsconnect::addConnectServer(
            "https://connect.rstudioservices.com/",
            "connect.rstudioservices.com"
          )
          rsconnect::connectApiUser(
            account = "winston",
            server = "connect.rstudioservices.com",
            apiKey = Sys.getenv("CONNECT_API_KEY")
          )

      - name: Deploy docs
        shell: Rscript {0}
        run: |
          rsconnect::deployApp(
            appDir = "docs/build/html",
            appName = "pyshiny",
            appTitle = "PyShiny documentation",
            contentCategory = "site",
            server = "connect.rstudioservices.com"
          )
